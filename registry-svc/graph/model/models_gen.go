// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"
)

// ApiActivity is a list of all the operation groups that have been executed on an API from the OTEL
// perspective. It can be used as a basis to determine performance and usage of an API.
type APIActivity struct {
	OperationName string    `json:"operationName"`
	FederationID  string    `json:"federationId"`
	SubgraphID    string    `json:"subgraphId"`
	SubgraphName  string    `json:"subgraphName"`
	OperationType string    `json:"operationType"`
	FirstAccess   string    `json:"firstAccess"`
	LastAccess    string    `json:"lastAccess"`
	Duration      *Duration `json:"duration,omitempty"`
}

type Duration struct {
	MinDuration *int `json:"minDuration,omitempty"`
	MaxDuration *int `json:"maxDuration,omitempty"`
	AvgDuration *int `json:"avgDuration,omitempty"`
	P95Duration *int `json:"p95Duration,omitempty"`
}

type LocationType string

const (
	LocationTypeInternal LocationType = "INTERNAL"
	LocationTypeExternal LocationType = "EXTERNAL"
)

var AllLocationType = []LocationType{
	LocationTypeInternal,
	LocationTypeExternal,
}

func (e LocationType) IsValid() bool {
	switch e {
	case LocationTypeInternal, LocationTypeExternal:
		return true
	}
	return false
}

func (e LocationType) String() string {
	return string(e)
}

func (e *LocationType) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = LocationType(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid LocationType", str)
	}
	return nil
}

func (e LocationType) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
